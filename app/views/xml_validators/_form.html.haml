= nested_form_for @xml_validator, :html => {:class=>'form-horizontal', :multipart => true, :autocomplete=>"off", :id => "validator_form", :style=> 'overflow: auto;'} do |f|
  - if @xml_validator.errors.any?
    #error_explanation
      %h2
        = pluralize(@xml_validator.errors.count, "error")
        prohibited this validator from being saved:
      %ul
        - @xml_validator.errors.full_messages.each do |message|
          %li= message
  .control-group
    .control-group
      = f.label :name, :class => 'control-label'
      = f.text_field :name
    .control-group
      = f.label :xml_schema, :class => 'control-label'
      = f.text_area :xml_schema, size: "30x10", :style=>"width: 410px; max-width: 500px; resize: both; height: 100px; max-height: 180px;"

    .control-group{:style=>"clear: both;"}
      %table#responses
        = f.fields_for :response, :wrapper => false do |response_form|
          %tr.fields
            %td= response_form.label :content_type, 'Content Type', :class => 'control-label'
            %td= response_form.select :content_type, options_for_select(Response.options_for_content_type, response_form.object.content_type)

            %td= response_form.label :response, 'Response', :class => 'control-label'
            %td= response_form.text_area :response, size: "30x10", :style=>"width: 500px; max-width: 500px; resize: both; height: 100px; max-height: 180px;"

            %td= response_form.link_to_remove "Remove this response", :class => 'control-label'

        = f.link_to_add "Add a response", :response, :data => { :target => "#responses" }
  .actions
    = f.submit "Create Schema", :class => "btn"
